name: Lint Code

on:
  pull_request:
    branches:
      - develop
    types:
      - opened
      - synchronize
    # paths-ignore:
    #   - '.github/**'

env:
  NODE_VERSION: '16.13'
  NODE_CACHE: 'yarn'
  GIT_DEFAULT_USER: "github-actions[bot]"
  GIT_DEFAULT_EMAIL: "41898282+github-actions[bot]@users.noreply.github.com"

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # check_files_diff:
  #   runs-on: ubuntu-latest
  #   if: ${{ github.event.pull_request.draft == false }}
  #   outputs:
  #     files_changed: ${{ steps.get_pr_files_diff.outputs.files_changed }}
  #   steps:
  #     - name: Checkout to repository
  #       uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0

  #     - name: Get PR files changed
  #       id: get_pr_files_diff
  #       run: |
  #         targetBranchLatestCommitSha="$(git log -n 1 --pretty=format:"%H" origin/${{ github.base_ref }})"
  #         commitDiffFiles="$(git diff --no-commit-id --name-only --diff-filter=ACMRT ${targetBranchLatestCommitSha} ${{ github.sha }} | grep -E '(.js$|.ts$)' | xargs)"

  #         echo "::set-output name=files_changed::$(echo $commitDiffFiles)"
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Echo files changed output
  #       run: |
  #         echo ${{ steps.get_pr_files_diff.outputs.files_changed }}

  lint:
    runs-on: ubuntu-latest
    # needs: check_files_diff
    # if: ${{ needs.check_files_diff.outputs.files_changed }}
    steps:
      - name: Checkout to repository
        if: ${{ github.actor != env.GIT_DEFAULT_USER }}
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
          ref: ${{ github.event.pull_request.head.ref }}
          token: ${{ secrets.REPO_PAT }}

      - name: Get PR files changed
        if: ${{ github.actor != env.GIT_DEFAULT_USER }}
        id: get_pr_files_diff
        run: |
          targetBranchLatestCommitSha="$(git log -n 1 --pretty=format:"%H" origin/${{ github.base_ref }})"
          prDiffFiles="$(git diff --no-commit-id --name-only --diff-filter=ACMRT ${targetBranchLatestCommitSha} ${{ github.sha }} | grep -E '(.js$|.ts$)' | xargs)"

          commitDiffFiles="$(git diff-tree --no-commit-id --name-only --diff-filter=ACMRTUXB -r ${{ github.event.pull_request.head.sha }} | grep -E '(.js$|.ts$)' | xargs)"

          echo "::set-output name=files_changed::$commitDiffFiles"

          echo "COMMIT DIFF"
          echo "$commitDiffFiles"
          echo "PR COMMIT DIFF"
          echo "$prDiffFiles"

      - name: Echo step output
        run: echo "${{ steps.get_pr_files_diff.outputs.files_changed }}"

      - name: Setup Node version and cache
        if: ${{ steps.get_pr_files_diff.outputs.files_changed }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: ${{ env.NODE_CACHE }}

      - name: Install dependencies
        if: ${{ steps.get_pr_files_diff.outputs.files_changed }}
        run: yarn install --frozen-lockfile

      - name: Run lint and comment report to PR
        if: ${{ steps.get_pr_files_diff.outputs.files_changed }}
        uses: reviewdog/action-eslint@v1
        with:
          github_token: ${{ github.token }}
          eslint_flags: "--fix ${{ steps.get_pr_files_diff.outputs.files_changed }}"
        
      - name: Commit & Push lint files changed
        run: |
          if [[ -n "$(git status --porcelain)" ]]; then
            git config user.name $GIT_DEFAULT_USER
            git config user.email $GIT_DEFAULT_EMAIL

            git add .
            
            echo "Preparing to push the following changes:"
            echo "$(git status --porcelain)"

            git commit -m "$COMMIT_MESSAGE"
            git push
          else
            echo "Nothing to commit, no files were modified."
          fi
        env:
          COMMIT_MESSAGE: "chore(lint): Fix code style issues with ESLint and Prettier"
