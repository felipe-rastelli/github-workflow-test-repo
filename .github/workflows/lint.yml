name: Lint Code

on:
  pull_request:
    branches:
      - develop
    types:
      - opened
      - closed
      - synchronize
    # paths-ignore:
    #   - '.github/**'

env:
  NODE_VERSION: '16.13'
  NODE_CACHE: 'yarn'

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check_files_diff:
    name: Check files diff
    runs-on: ubuntu-latest
    if: ${{ github.event.pull_request.draft == false }}
    outputs:
      files_changed: ${{ steps.get_pr_files_diff.outputs.files_changed }}
    steps:
      - name: Checkout to repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get PR files changed
        id: get_pr_files_diff
        run: |
          targetBranchLatestCommitSha="$(git log -n 1 --pretty=format:"%H" origin/${{ github.base_ref }})"
          commitDiffFiles="$(git diff --no-commit-id --name-only --diff-filter=ACMRT ${targetBranchLatestCommitSha} ${{ github.sha }} | grep -E '(.js$|.ts$)' | xargs)"

          echo "::set-output name=files_changed::$(echo $commitDiffFiles)"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Echo files changed output
        run: |
          echo ${{ steps.get_pr_files_diff.outputs.files_changed }}

  lint:
    name: Scan and report errors
    runs-on: ubuntu-latest
    needs: check_files_diff
    if: ${{ needs.check_files_diff.outputs.files_changed }}
    steps:
      - name: Checkout to repository
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Checkout to repository
        if: ${{ github.event_name != 'pull_request' }}
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Setup Node version and cache
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: ${{ env.NODE_CACHE }}

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run lint and comment report to PR
        uses: reviewdog/action-eslint@v1
        with:
          github_token: ${{ github.token }}
          eslint_flags: "--fix ${{ needs.check_files_diff.outputs.files_changed }}"

      - name: Commit & Push lint files changed
        if: ${{ github.event.pull_request.merged == true }}
        run: |
          echo "Pushing ESLint fixes to repo"
          echo '${{ github.event }}'

          if [[ -n "$(git status --porcelain)" ]]; then
            git config user.name $GIT_USER_NAME
            git config user.email $GIT_USER_EMAIL

            git add .
            
            echo "Preparing to push the following changes:"
            echo "$(git status --porcelain)"

            git commit -m "$COMMIT_MESSAGE"
            git push
          else
            echo "Nothing to commit, no files were modified."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COMMIT_MESSAGE: "chore(lint): Fix code style issues with ESLint and Prettier"
          GIT_USER_NAME: "github-actions[bot]"
          GIT_USER_EMAIL: "github-actions@github.com"
