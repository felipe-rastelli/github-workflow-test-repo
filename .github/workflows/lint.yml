name: Lint Code

on:
  workflow_call:
    inputs:
      node_version:
        description: "Node version to setup environment"
        required: true
        type: string
      node_cache:
        description: "Package manager to cache dependencies"
        required: true
        type: string

# env:
  # GIT_DEFAULT_USER: "github-actions[bot]"
  # GIT_DEFAULT_EMAIL: "41898282+github-actions[bot]@users.noreply.github.com"

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout to repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Get PR files changed
        if: ${{ github.event_name == 'pull_request' }}
        id: get_pr_files_diff
        run: |
          targetBranchLatestCommitSha=${{ github.event.pull_request.base.sha }}
          headBranchLatestCommitSha=${{ github.sha }}

          diffFiles=$(git diff --no-commit-id --name-only --diff-filter=ACMRT $targetBranchLatestCommitSha $headBranchLatestCommitSha | grep -E '(.js$|.ts$)' | xargs)

          echo "ALL FILES: $diffFiles"

          echo "::echo::on"
          echo "::set-output name=files_changed::$diffFiles"

      - name: Setup Node version and cache
        if: ${{ steps.get_pr_files_diff.outputs.files_changed }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ inputs.node_version }}
          cache: ${{ inputs.node_cache }}

      - name: Install dependencies
        if: ${{ steps.get_pr_files_diff.outputs.files_changed }}
        run: yarn install --frozen-lockfile

      - name: Run lint and comment report to PR
        if: ${{ steps.get_pr_files_diff.outputs.files_changed }}
        uses: reviewdog/action-eslint@v1
        with:
          github_token: ${{ github.token }}
          eslint_flags: "${{ steps.get_pr_files_diff.outputs.files_changed }}"
        
      # - name: Commit & Push lint files changed
      #   run: |
      #     echo "DEBUG"
      #     echo ${{ toJSON(github.actor) }}
      #     echo "$GIT_DEFAULT_USER"
      #     echo "DEBUG"

      #     if [[ -n "$(git status --porcelain)" ]]; then
      #       git config user.name $GIT_DEFAULT_USER
      #       git config user.email $GIT_DEFAULT_EMAIL

      #       echo "GIT USER $(git config user.name)"
      #       echo "GIT USER $(git config user.email)"

      #       git add .
            
      #       echo "Preparing to push the following changes:"
      #       echo "$(git status --porcelain)"

      #       git commit -m "$COMMIT_MESSAGE"
      #       git push
      #     else
      #       echo "Nothing to commit, no files were modified."
      #     fi
      #   env:
      #     COMMIT_MESSAGE: "chore(lint): Fix code style issues with ESLint and Prettier"
