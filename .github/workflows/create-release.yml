name: Create Release

on:
  workflow_dispatch:
    inputs:
      milestone-id:
        description: Milestone ID to get release info
        type: string
        required: true

concurrency:
  cancel-in-progress: true
  group: cd-${{ github.workflow }}-${{ github.ref }}
  
jobs:
  release-prod:
    name: Create Release Pull Request
    runs-on: ubuntu-latest
    steps:
      - name: Get next version tag
        id: get-next-version-tag
        run: |
          milestone="$(gh api repos/$GITHUB_REPOSITORY/milestones/$MILESTONE_ID --jq '.title')"
          echo "::echo::on"
          echo "::set-output name=next-version::$milestone"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          MILESTONE_ID: ${{ github.event.inputs.milestone-id }}

      - name: Get release notes
        uses: Beakyn/gha-format-release-notes@v1
        id: get-release-notes
        with:
          repository: ${{ github.repository }}
          milestone: ${{ github.event.inputs.milestone-id }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout to repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref_name }}

      - name: Config git user
        run: |
          git config user.name $GIT_USERNAME
          git config user.email $GIT_USER_EMAIL
        env:
          GIT_USERNAME: "GitHub Action"
          GIT_USER_EMAIL: "github-action@users.noreply.github.com"

      - name: Checkout to release branch
        run: |
          git checkout -b release/${{ steps.get-next-version-tag.outputs.next-version }}
        
      - name: Bump version
        run: |
          npm --no-git-tag-version version ${{ steps.get-next-version-tag.outputs.next-version }}

      - name: Write changelog
        id: write-changelog
        run: |
          today=$(date +%F)

          HEADER="## ${{ steps.get-next-version-tag.outputs.next-version }} ($today)"
          RELEASE_NOTES=${{ steps.get-release-notes.outputs.release-notes }}

          body="$HEADER\n$RELEASE_NOTES\n"

          { head -n 4 CHANGELOG.md; printf "$body"; tail -n +5 CHANGELOG.md; } > temp && mv temp CHANGELOG.md
          cat CHANGELOG.md

          echo "::echo::on"
          echo "::set-output name=changelog::$body"          

      - name: Commit changes to remote
        run: |
          git add .
          git commit -m "Release ${{ steps.get-next-version-tag.outputs.next-version }}"
          git push -f origin $(git rev-parse --abbrev-ref HEAD)

      - name: Create release PR
        run: |
          title="Release $VERSION"
          body="${{ steps.write-changelog.outputs.changelog }}"

          currentBranch=$(git rev-parse --abbrev-ref HEAD)

          gh pr create \
            --title "$title" \
            --body "$body" \
            --milestone "$MILESTONE_NAME" \
            --assignee "$ASSIGNEE" \
            --head "$currentBranch" \
            --base "$BASE_BRANCH"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MILESTONE_NAME: ${{ steps.get-next-version-tag.outputs.next-version }}
          BASE_BRANCH: main
          ASSIGNEE: ${{ github.actor }}
          VERSION: ${{ steps.get-next-version-tag.outputs.next-version }}
