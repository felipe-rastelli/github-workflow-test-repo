name: Create Release

on:
  workflow_dispatch:
    inputs:
      milestone-id:
        description: Milestone ID to get release information
        type: string
        required: true
      username:
        description: Git username to test
        type: string
        required: true
      email:
        description: Git email to test
        type: string
        required: false

concurrency:
  cancel-in-progress: true
  group: cd-${{ github.workflow }}-${{ github.ref }}
  
jobs:
  release-prod:
    name: Create Release Pull Request
    runs-on: ubuntu-latest
    steps:
      # - name: "DEBUG 2"
      #   run: |
      #     echo "*******GITHUB CONTEXT*******"
      #     echo ${{ toJSON(github) }}

      - name: Get next version tag
        id: get-next-version-tag
        run: |
          milestone="$(gh api repos/$GITHUB_REPOSITORY/milestones/${{ github.events.inputs.milestone-id }} --jq '.title')"
          echo "::echo::on"
          echo "::set-output name=next-version::$milestone"

      - name: Get release notes
        uses: Beakyn/gha-format-release-notes@v1
        id: get-release-notes
        with:
          repository: ${{ github.repository }}
          milestone: ${{ github.event.inputs.milestone-id }}

      - name: Checkout to repository
        uses: actions/checkout@v2

      - name: Config git machine user
        run: |
          git config user.name ${{ github.actor }}
          # git config user.email ${{ github.event.inputs.email }}

      - name: Checkout to release branch
        run: |
          git checkout -b release/${{ github.event.inputs.milestone-id }}
        
      - name: Bump version
        run: |
          npm --no-git-tag-version version ${{ steps.get-next-version-tag.outputs.next-version }}

      - name: Write changelog
        id: write-changelog
        run: |
          today=$(date +%F)
          body="
            ## ${{ steps.get-next-version-tag.outputs.next-version }} ($currentDate)\n
            ${{ steps.get-release-notes.outputs.release-notes }}\n
          "

          { head -n 4 CHANGELOG.md; printf "$body"; tail -n +5 CHANGELOG.md; } > temp && mv temp CHANGELOG.md
          cat CHANGELOG.md

          echo "::echo::on"
          echo "::set-output name=changelog::$body"          

      - name: Commit changes
        run: |
          git add .
          git commit -m "Release ${{ steps.get-next-version-tag.outputs.next-version }}"

      - name: Create PR to master branch
        run: |
          gh pr create --milestone ${{ github.event.inputs.milestone-id }} 
            --title "Release ${{ steps.get-next-version-tag.outputs.next-version }}"
            --body ${{ steps.write-changelog.outputs.changelog }}
            --base master
            --assignee ${{ github.actor }}
